workflows:
  ios-workflow:
    name: iOS Workflow
    environment:
      xcode: latest
      cocoapods: default
      vars:
        XCODE_PROJECT: "TravelExpenses.xcodeproj"
        XCODE_SCHEME: "TravelExpenses"
        BUNDLE_ID: "com.Travon.TravelExpenses"
        TEAM_ID: "74335G6GZ5"
        # App Store Connect API credentials
        APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID
        APP_STORE_CONNECT_API_KEY_ID: $APP_STORE_CONNECT_API_KEY_ID
        APP_STORE_CONNECT_API_KEY: $APP_STORE_CONNECT_API_KEY
        # App Store Connect credentials for upload
        APP_STORE_CONNECT_USERNAME: $APP_STORE_CONNECT_USERNAME
        APP_STORE_CONNECT_APP_SPECIFIC_PASSWORD: $APP_STORE_CONNECT_APP_SPECIFIC_PASSWORD
      flutter: stable
      node: latest
    scripts:
      - name: Set up code signing settings on Xcode project
        script: |
          # Update project settings with correct object IDs
          # Debug configuration
          /usr/libexec/PlistBuddy -c "Set :objects:F21C12C82E212CD800C7DB37:buildSettings:CODE_SIGN_STYLE Automatic" "$XCODE_PROJECT/project.pbxproj"
          /usr/libexec/PlistBuddy -c "Set :objects:F21C12C82E212CD800C7DB37:buildSettings:DEVELOPMENT_TEAM $TEAM_ID" "$XCODE_PROJECT/project.pbxproj"
          
          # Release configuration
          /usr/libexec/PlistBuddy -c "Set :objects:F21C12C92E212CD800C7DB37:buildSettings:CODE_SIGN_STYLE Automatic" "$XCODE_PROJECT/project.pbxproj"
          /usr/libexec/PlistBuddy -c "Set :objects:F21C12C92E212CD800C7DB37:buildSettings:DEVELOPMENT_TEAM $TEAM_ID" "$XCODE_PROJECT/project.pbxproj"
          
          echo "✅ Code signing settings updated"
      - name: Get iOS code signing files
        script: |
          # Check required environment variables
          if [ -z "$APP_STORE_CONNECT_API_KEY_ID" ] || [ -z "$APP_STORE_CONNECT_ISSUER_ID" ] || [ -z "$APP_STORE_CONNECT_API_KEY" ]; then
            echo "❌ Missing required App Store Connect environment variables"
            exit 1
          fi
          
          # Set up keychain for code signing
          security create-keychain -p "codemagic" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "codemagic" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
          
          # Set partition list
          security set-key-partition-list -S apple-tool:,apple: -s -k "codemagic" build.keychain
          
          echo "✅ Keychain setup completed"
      - name: Set up Apple Developer account
        script: |
          # Set up Apple Developer account in Xcode
          echo "Setting up Apple Developer account..."
          
          # Create App Store Connect API key file for xcodebuild
          cat > /tmp/api_key.json << EOF
          {
            "key_id": "$APP_STORE_CONNECT_API_KEY_ID",
            "issuer_id": "$APP_STORE_CONNECT_ISSUER_ID",
            "key": "$APP_STORE_CONNECT_API_KEY"
          }
          EOF
          
          # Set environment variables for Xcode
          export APP_STORE_CONNECT_ISSUER_ID="$APP_STORE_CONNECT_ISSUER_ID"
          export APP_STORE_CONNECT_API_KEY_ID="$APP_STORE_CONNECT_API_KEY_ID"
          export APP_STORE_CONNECT_API_KEY="$APP_STORE_CONNECT_API_KEY"
          
          echo "✅ Apple Developer account setup completed"
      - name: Create export options plist
        script: |
          # Create export options plist
          cat > /tmp/exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>$TEAM_ID</string>
              <key>signingStyle</key>
              <string>automatic</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF
          
          echo "✅ Export options plist created"
      - name: Build iOS app
        script: |
          # Build the iOS app using xcodebuild
          echo "Building iOS app..."
          
          # Create build directory
          mkdir -p /tmp/build
          
          # Clean and archive
          xcodebuild -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "/tmp/build/TravelExpenses.xcarchive" \
            -allowProvisioningUpdates \
            -authenticationKeyPath "/tmp/api_key.json" \
            -authenticationKeyID "$APP_STORE_CONNECT_API_KEY_ID" \
            clean archive
          
          # Check if archive was created
          if [ ! -f "/tmp/build/TravelExpenses.xcarchive" ]; then
            echo "❌ Archive not created"
            exit 1
          fi
          
          echo "✅ Archive created successfully"
          
          # Export IPA
          xcodebuild -exportArchive \
            -archivePath "/tmp/build/TravelExpenses.xcarchive" \
            -exportPath "/tmp/build/ios" \
            -exportOptionsPlist /tmp/exportOptions.plist
          
          # Check if IPA was created
          if [ ! -f "/tmp/build/ios/TravelExpenses.ipa" ]; then
            echo "❌ IPA not created"
            exit 1
          fi
          
          echo "✅ iOS app built successfully"
      - name: Create iOS build artifacts
        script: |
          # Check for created artifacts
          echo "Checking for created artifacts..."
          ls -la /tmp/build/ios/
          
          # Verify the .ipa file exists
          if [ -f "/tmp/build/ios/TravelExpenses.ipa" ]; then
            echo "✅ TravelExpenses.ipa created successfully"
          else
            echo "❌ TravelExpenses.ipa not found"
            exit 1
          fi
    artifacts:
      - /tmp/build/ios/*.ipa
      - /tmp/build/TravelExpenses.xcarchive
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_API_KEY
        key_id: $APP_STORE_CONNECT_API_KEY_ID
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        submit_to_app_store: false 